server {
	server_name blog.mio.com;
	listen 80;

	# redirect http to https
	return 301 https://$server_name$request_uri;
}

server {
	server_name blog.mio.com;
	listen 443 ssl;
	http2 on;

    ssl_certificate /etc/nginx/ssl/STAR_mio.com.pem;
    ssl_certificate_key /etc/nginx/ssl/STAR_mio.com.key;

	root /data/mio_class;
	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

    access_log /var/log/nginx/mioclass_access.log apm1;
    error_log /var/log/nginx/mioclass_error.log;

#	include /etc/nginx/location.d/maintenance-setting.conf;

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header allowed_ips $allowed_ip;
	add_header X-Frame-Options SAMEORIGIN;

	# error_page 403 @disallow-zone;
	# error_page 404 @pagenotfound-zone;
	# error_page 503 @maintenance3;

	# location @disallow-zone {
	# 	root /data/maintenance;
	# 	rewrite ^(.*)$ /403.html break;
	# }

	# location @pagenotfound-zone {
	# 	root /data/maintenance;
	# 	rewrite ^(.*)$ /404.html break;
	# }

	# location @maintenance3 {
	# 	root /data/maintenance;
	# 	rewrite ^(.*)$ /maintenance-mio-normal.html break;
	# }

	location ~* wp-config\.php$ {
		deny all;
		error_page 404 = /index.php;
		return 404;
	}
	
	location / {
		try_files $uri $uri/ /tw/index.php?$args;
		rewrite ^ /tw/ break;
	}

	location /tw {
		# First attempt to serve request as file, then as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /tw/index.php?$args;
	}

	location /ru {
		# First attempt to serve request as file, then as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /ru/index.php?$args;
	}

	include /etc/nginx/location.d/aka-extend.locations;

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		try_files $uri $uri/ /tw/index.php?$args;
		# try_files $uri $uri/ @pagenotfound-zone;
		# fastcgi_pass unix:/run/php/php7.3-fpm.sock;
		fastcgi_pass php-fpm-8.2:9000;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param HTTPS $https if_not_empty;
		fastcgi_intercept_errors on;
		include fastcgi_params;
	}
}
